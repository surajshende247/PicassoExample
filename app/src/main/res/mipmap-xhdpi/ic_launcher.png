package com.subjibag.app;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Paint;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.AnimationUtils;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.android.volley.AuthFailureError;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.squareup.picasso.Picasso;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class ProductDataAdapter extends RecyclerView.Adapter<ProductDataAdapter.ProductDataViewHolder> {

    ArrayList<ProductData> productDataArrayList;
    FirebaseUser currentUser;

    ProgressDialog progressDialog;


    public ProductDataAdapter(ArrayList<ProductData> productDataArrayList,FirebaseUser currentUser) {
        this.productDataArrayList = productDataArrayList;
        this.currentUser = currentUser;

    }


    @NonNull
    @Override
    public ProductDataViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
            LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext());
            View itemView = layoutInflater.inflate(R.layout.layout_item,parent,false);
            return new ProductDataAdapter.ProductDataViewHolder(itemView);
    }

    @Override
    public void onBindViewHolder(@NonNull final ProductDataViewHolder holder, int position) {
        final ProductData o = productDataArrayList.get(position);
            holder.tvProduct.setText(o.getProduct_name());

            Picasso.get().load(o.getImgurl())
                    .placeholder(R.drawable.ico_basket1)
                    .into(holder.imgProduct);

            holder.tvUnits.setText(o.getUnits());

            holder.tvPrice.setText("â‚¹" + o.getCurrent_price() + "   ");

            holder.tvOldPrice.setText(" " + o.getOrigional_price() + " ");
            holder.tvOldPrice.setPaintFlags(Paint.STRIKE_THRU_TEXT_FLAG);


            float p1 = Float.parseFloat(o.getCurrent_price());
            float p2 = Float.parseFloat(o.getOrigional_price());


            int offer = (int) (((p2-p1)*100)/p2);
            if(offer!=0)
            holder.tvOffer.setText("   (" + offer + "%OFF)");

            holder.tvPriceDescription.setText(o.getCurrent_price() + " x 1 = " + o.getCurrent_price());

            //to increase the quantity
            holder.imgInc.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    int qnt = Integer.parseInt(holder.tvQuantity.getText().toString());
                    if (qnt < 20) {
                        ++qnt;
                        holder.tvQuantity.setText(qnt + "");
                    }
                    holder.tvPriceDescription.setText(o.getCurrent_price() + " x " + qnt + " = " + (Integer.parseInt(o.getCurrent_price()) * qnt));
                }
            });

            //to decrease the quantity
            holder.imgDec.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    int qnt = Integer.parseInt(holder.tvQuantity.getText().toString());
                    if (qnt > 1) {
                        --qnt;
                        holder.tvQuantity.setText(qnt + "");
                    }
                    holder.tvPriceDescription.setText(o.getCurrent_price() + " x " + qnt + " = " + (Integer.parseInt(o.getCurrent_price()) * qnt));
                }
            });

            holder.btnAddToCart.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    addItemToCart(currentUser.getUid(),o.getId(),o.getCurrent_price(),holder.tvQuantity.getText().toString(),v.getContext());
                }
            });
        }

        void addItemToCart(final String uid,final String product_id,final String current_price,final String quantity, final Context context)
        {
            progressDialog = new ProgressDialog(context);
            progressDialog.setTitle("Adding to Cart");
            progressDialog.show();
            RequestQueue 